package principales;

import Compilador.parser;
import clases.LinePainter;
import clases.PanelTab;
import clases.ShapeTabbedPane;
import clases.StyleParser;
import clases.TextLineNumber;

import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextPane;
import javax.swing.JViewport;
import javax.swing.Timer;
import javax.swing.event.CaretEvent;
import javax.swing.event.CaretListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.JTextComponent;
import javax.swing.text.Utilities;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kleinz
 */
public class IDE extends javax.swing.JFrame {

    /**
     * Creates new form IDE
     */
    ShapeTabbedPane pane = new ShapeTabbedPane();
    ImageIcon icon = new ImageIcon(getClass().getResource("/icons/rojo.png"));
    String textopaneseleccionado = "";
    int diferenciaX;
    int diferenciaY;
    int rectX = 0, rectY = 0;
    long ts;
    public int cont = 0;
    Timer time;
    JLabel lb;
    public static JTextPane output;
    boolean compilable;
    boolean leido;
    String fileName;
    String fileAddress = "";
    parser p;

    public IDE() {
        this.setUndecorated(true);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("/icons/rasp4.png")));
        initComponents();
        ts = System.currentTimeMillis();
        p = new parser();
        // CanvasJPanel canvasjp = new CanvasJPanel(canvas);
        FileNameExtensionFilter f = new FileNameExtensionFilter("C Programas", "c", "C");
        FileNameExtensionFilter f2 = new FileNameExtensionFilter("Source", "codigo");

        jFileChooser1.addChoosableFileFilter(f);
        jFileChooser1.addChoosableFileFilter(f2);
        jFileChooser1.setFileFilter(f);

        pane.setSize(1070, 400);
        pane.setLocation(140, 50);
        pane.setTabLayoutPolicy(JTabbedPane.SCROLL_TAB_LAYOUT);
        //contenedor.add(pane);
        output = new JTextPane();
        //output.setEnabled(false);
        output.setEditable(false);
        output.setForeground(Color.BLACK);
        output.setFont(new java.awt.Font("Tahoma", Font.BOLD, 12)); // NOI18N

        if (pane.verificaComponentes()) {
            jPanel4.setVisible(true);
        }
        //this.getContentPane().add(pane);

        jPanel1.add(pane);
        jPanel1.add(output);
        jLabel14.setVisible(false);
        jLabel15.setVisible(false);
        jLabel16.setVisible(false);
        jLabel17.setVisible(false);
        jLabel11.setVisible(false);
        jTextField1.setVisible(false);

        jLabel19.setVisible(false);
        jLabel20.setVisible(false);
        jLabel21.setVisible(false);
        jLabel22.setVisible(false);
        jLabel23.setVisible(false);
        jLabel24.setVisible(false);
        jLabel25.setVisible(false);

    }

    public long timeExecution() {
        return ts;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        header = new javax.swing.JPanel(){
            protected void paintComponent(Graphics grphcs) {
                super.paintComponent(grphcs);
                Graphics2D g2d = (Graphics2D) grphcs;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
                GradientPaint gp = new GradientPaint(0, 0,
                    new Color(0,0,0), 0, getHeight(), new Color(102,0,51), true);
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight());

            }

        };
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel(){
            protected void paintComponent(Graphics grphcs) {
                super.paintComponent(grphcs);
                Graphics2D g2d = (Graphics2D) grphcs;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
                GradientPaint gp = new GradientPaint(0, 0,
                    new Color(0,0,0), 0, getHeight(), new Color(51,51,51), true);
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight());

            }

        };
        jLabel15 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel(){
            protected void paintComponent(Graphics grphcs) {
                super.paintComponent(grphcs);
                Graphics2D g2d = (Graphics2D) grphcs;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
                GradientPaint gp = new GradientPaint(0, 0,
                    new Color(0,0,0), 0, getHeight(), new Color(227,11,93),false);
                g2d.setPaint(gp);
                g2d.fillRect(0, 0, getWidth(), getHeight());

            }
        };
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel(){

            protected void paintComponent(Graphics grphcs) {
                super.paintComponent(grphcs);
                Graphics2D g2d = (Graphics2D) grphcs;
                g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                    RenderingHints.VALUE_ANTIALIAS_ON);
                GradientPaint gp = new GradientPaint(0, 0,
                    new Color(0,0,0), 0, getHeight(), new Color(51,51,51), true);

                // g2d.setPaint(gp);

                g2d.fillRect(0, 0, getWidth(), getHeight());

            }
        };
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentMoved(java.awt.event.ComponentEvent evt) {
                formComponentMoved(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeiconified(java.awt.event.WindowEvent evt) {
                formWindowDeiconified(evt);
            }
        });

        header.setBackground(new java.awt.Color(204, 204, 204));
        header.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(51, 51, 51)));
        header.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headerMouseDragged(evt);
            }
        });
        header.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                headerMousePressed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rojo.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("RASBY SBS");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/amarillo.png"))); // NOI18N
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/verde.png"))); // NOI18N
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout headerLayout = new javax.swing.GroupLayout(header);
        header.setLayout(headerLayout);
        headerLayout.setHorizontalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addContainerGap())
        );
        headerLayout.setVerticalGroup(
            headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(headerLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, headerLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(240,240,240));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 1, 1, new java.awt.Color(0, 0, 0)));

        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/menos24.png"))); // NOI18N
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel15MouseEntered(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/mas24.png"))); // NOI18N
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel14MouseEntered(evt);
            }
        });

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wrong2.png"))); // NOI18N
        jLabel16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel16MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel16MouseEntered(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel17MouseEntered(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel19.setText("Tres Direcciones con IDs");
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel19MouseEntered(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel20.setText("TS estática");
        jLabel20.setToolTipText("");
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel20MouseEntered(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel21.setText("Tres Direcciones");
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel21MouseEntered(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel22.setText("TS dinámica");
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel22MouseEntered(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel23.setText("Cuádruplas");
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel23MouseEntered(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel24.setText("Código ensamblador");
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel24MouseEntered(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/searchblanco.png"))); // NOI18N
        jLabel25.setText("Lexemas");
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel25MouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(jLabel22)
                .addGap(39, 39, 39)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel15)
                .addGap(10, 10, 10)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24)
                            .addComponent(jLabel25)))
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/rasp4.png"))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tempus Sans ITC", 1, 36)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("RASBY SBS");
        jLabel13.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(460, 460, 460)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addGap(438, 438, 438))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(421, 421, 421)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 413, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ayudaazul.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel6MouseEntered(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/guardarosa.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel7MouseEntered(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/abrirverde.png"))); // NOI18N
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel8MouseEntered(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/nuevoamarillo.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel9MouseEntered(evt);
            }
        });

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/compilarmorado.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel10MouseEntered(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tempus Sans ITC", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("MENÚ");
        jLabel2.setToolTipText("");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 102));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("[X:Y]");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

//now set listener for label.

    private void headerMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMousePressed
        // TODO add your handling code here:
        diferenciaX = evt.getXOnScreen() - this.getLocationOnScreen().x;
        diferenciaY = evt.getYOnScreen() - this.getLocationOnScreen().y;
    }//GEN-LAST:event_headerMousePressed

    private void headerMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headerMouseDragged
        // TODO add your handling code here:
        this.setLocation(evt.getXOnScreen() - diferenciaX, evt.getYOnScreen() - diferenciaY);
    }//GEN-LAST:event_headerMouseDragged

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked
    boolean ExtendedState = false;
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        //maximizar
        if (ExtendedState == false) {
            this.setExtendedState(MAXIMIZED_BOTH);

            //System.out.println("MAXI "+i);
            ExtendedState = true;
            pane.setSize(1185 + 25, 500);
            output.setSize(1185 + 25, 150);
            output.setLocation(140, pane.getHeight() + 50 + 20);

            if (jPanel4.isVisible()) {
                output.setVisible(false);
            } else {
                output.setVisible(true);
            }
        } else {
            this.setExtendedState(NORMAL);
            pane.setSize(1070, 400);
            output.setSize(1070, 150);
            output.setLocation(140, pane.getHeight() + 50 + 20);
            ExtendedState = false;
        }

    }//GEN-LAST:event_jLabel3MouseClicked
    int estado;
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        //minimizar
        estado = this.getExtendedState();
        this.setExtendedState(ICONIFIED);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void formWindowDeiconified(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeiconified
        // TODO add your handling code here:
        if (estado == 0) {
            this.setExtendedState(NORMAL);
        }
        if (estado == 6) {
            this.setExtendedState(MAXIMIZED_BOTH);
        }
    }//GEN-LAST:event_formWindowDeiconified

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        //GUARDAR imagen
        if (!jPanel4.isVisible()) {
            ShapeTabbedPane stp = pane;

            JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));

            JViewport jvp = ((JViewport) jsp.getComponent(0));
            JTextPane jtp = ((JTextPane) jvp.getComponent(0));

            String s = jtp.getText();

            System.out.println((s));
            Guardar(jtp.getText());
        }
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        //ABRIR imagen

        String s[] = abrirArchivo();
        if (s[0].trim().length() > 0) {
            agregaPestañaDesdeNuevo(s[0], s[1]);
            jPanel4.setVisible(false);
            output.setSize(1070, 150);
            output.setBorder(BorderFactory.createTitledBorder("Output"));
            output.setLocation(140, pane.getHeight() + 50 + 20);

            output.setVisible(true);
            jLabel14.setVisible(true);
            jLabel15.setVisible(true);
            jLabel16.setVisible(true);
            jLabel17.setVisible(true);
            jLabel11.setVisible(true);
            jTextField1.setVisible(true);
            jLabel19.setVisible(true);
            jLabel20.setVisible(true);
            jLabel21.setVisible(true);
            jLabel22.setVisible(true);
            jLabel23.setVisible(true);
            jLabel24.setVisible(true);
            jLabel25.setVisible(true);
        }


    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        //NUEVO imagen
        // leido = false;
        //compilable = false;
        String nombre = "";
        try {
            nombre = javax.swing.JOptionPane.showInputDialog(this, "Introduce el nombre de tu clase");
            if (nombre.trim().length() > 0) {
                String nombre2;
                nombre2 = GuardarconTitulo(nombre, "");
                String nom[] = nombre2.split("\\\\");
                nombre2 = nom[nom.length - 1];
                agregaPestañaDesdeNuevo(nombre2, "class " + nombre + "{ \n main(){\n }\n}");
                jPanel4.setVisible(false);
                output.setSize(1070, 150);
                output.setBorder(BorderFactory.createTitledBorder("Output"));
                output.setLocation(140, pane.getHeight() + 50 + 20);
                output.setVisible(true);

                jLabel14.setVisible(true);
                jLabel15.setVisible(true);
                jLabel16.setVisible(true);
                jLabel17.setVisible(true);
                jLabel11.setVisible(true);
                jTextField1.setVisible(true);
                jLabel19.setVisible(true);
                jLabel20.setVisible(true);
                jLabel21.setVisible(true);
                jLabel22.setVisible(true);
                jLabel23.setVisible(true);
                jLabel24.setVisible(true);
                jLabel25.setVisible(true);

            }

        } catch (NullPointerException ex) {
            System.out.println("El nuevo archivo debe tener un nombre.");
        }


    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        //COMPILAR IMAGEN
        if (!jPanel4.isVisible()) {
            output.setText("");
            ShapeTabbedPane stp = pane;

            JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
            JViewport jvp = ((JViewport) jsp.getComponent(0));
            JTextPane jtp = ((JTextPane) jvp.getComponent(0));

            String s = jtp.getText();
            System.out.println((s));
            System.out.println("address compilar: " + fileAddress);
            /// sibstring para obtener solo el titulo con .c            

            // System.out.println("10: "+e);
            /*     for(int i = 0; i< e.length; i++){
                System.out.println(e[i]);
            }
             */
            //  GuardarconTitulo(jtp.getName(),jtp.getText());
            //  fileAddress = jFileChooser1.getSelectedFile().getParent() + "/";
            //  if(compilable){
            //aqui va a compilar
            Guardar(jtp.getText());
            p.pars(jtp.getName());

            if (output.getText().isEmpty()) {
                output.setText("Compilación exitosa!");
            }
        }

        //}

    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        //AYUDA IMAGEN
        Help help_frame = new Help();

        help_frame.setVisible(true);

    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel9MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseEntered
        // TODO add your handling code here:
        jLabel9.setToolTipText("Nuevo documento");
        jLabel9.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel9MouseEntered

    private void jLabel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseEntered
        // TODO add your handling code here:
        jLabel8.setToolTipText("Abrir documento");
        jLabel8.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel8MouseEntered

    private void jLabel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseEntered
        // TODO add your handling code here:
        jLabel7.setToolTipText("Guardar");
        jLabel7.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel7MouseEntered

    private void jLabel10MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseEntered
        // TODO add your handling code here:
        jLabel10.setToolTipText("Compilar");
        jLabel10.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel10MouseEntered

    private void jLabel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseEntered
        // TODO add your handling code here:
        jLabel6.setToolTipText("Ver Ayuda");
        jLabel6.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel6MouseEntered

    private void formComponentMoved(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentMoved
        // TODO add your handling code here:

    }//GEN-LAST:event_formComponentMoved
    int fuente = 12;
    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        //aumenta tamaño fuente
        //28 12

        if (fuente <= 28) {
            fuente = fuente + 2;
            ShapeTabbedPane stp = pane;

            JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
            JViewport jvp = ((JViewport) jsp.getComponent(0));
            JTextPane jtp = ((JTextPane) jvp.getComponent(0));

            TextLineNumber jvp2 = (TextLineNumber) jsp.getRowHeader().getComponent(0);

            Font font = new Font("Serif", Font.ITALIC, fuente);
            jvp2.setFont(font);
            jtp.setFont(font);

            System.out.println(fuente);
        }
        //  String s = jtp.getText();
        // System.out.println((s));
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
        //disminuye fuente
        if (fuente >= 12) {
            fuente = fuente - 2;
            ShapeTabbedPane stp = pane;

            JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
            JViewport jvp = ((JViewport) jsp.getComponent(0));
            JTextPane jtp = ((JTextPane) jvp.getComponent(0));

            TextLineNumber jvp2 = (TextLineNumber) jsp.getRowHeader().getComponent(0);

            Font font = new Font("Serif", Font.ITALIC, fuente);
            jvp2.setFont(font);
            jtp.setFont(font);
            System.out.println(fuente);
        }
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:

        //buscar 
        ShapeTabbedPane stp = pane;

        JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
        JViewport jvp = ((JViewport) jsp.getComponent(0));
        JTextPane jtp = ((JTextPane) jvp.getComponent(0));

        buscarpalabra(jtp, jTextField1.getText());
    }//GEN-LAST:event_jLabel17MouseClicked
    LinePainter painter;
    private void jLabel16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseClicked
        // TODO add your handling code here:
        //borrar
        ShapeTabbedPane stp = pane;
        //prueba
        // PanelTab tab = ((PanelTab)stp.getComponent(stp.getTabCount()+1));

        //
        JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
        JViewport jvp = ((JViewport) jsp.getComponent(0));
        JTextPane jtp = ((JTextPane) jvp.getComponent(0));

        Highlighter h = jtp.getHighlighter();
        h.removeAllHighlights();
        painter = new LinePainter(jtp);
        painter.setColor(new Color(255, 0, 153, 50));
        jTextField1.setText("");

    }//GEN-LAST:event_jLabel16MouseClicked

    private void jLabel14MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseEntered
        // TODO add your handling code here:
        jLabel14.setToolTipText("Aumentar tamaño");
        jLabel14.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel14MouseEntered

    private void jLabel15MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseEntered
        // TODO add your handling code here:
        jLabel15.setToolTipText("Disminuir tamaño");
        jLabel15.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel15MouseEntered

    private void jLabel16MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel16MouseEntered
        // TODO add your handling code here:
        jLabel16.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel16MouseEntered

    private void jLabel17MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseEntered
        // TODO add your handling code here:
        jLabel17.setToolTipText("Buscar Palabra");
        jLabel17.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel17MouseEntered

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".ens");
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel23MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseEntered
        // TODO add your handling code here:
        jLabel23.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel23MouseEntered

    private void jLabel24MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseEntered
        // TODO add your handling code here:
        jLabel24.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel24MouseEntered

    private void jLabel19MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseEntered
        // TODO add your handling code here:
        jLabel19.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel19MouseEntered

    private void jLabel21MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseEntered
        // TODO add your handling code here:
        jLabel21.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel21MouseEntered

    private void jLabel20MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseEntered
        // TODO add your handling code here:
        jLabel20.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel20MouseEntered

    private void jLabel22MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseEntered
        // TODO add your handling code here:
        jLabel22.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel22MouseEntered

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".ci");
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".3dir2");
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".3dir");
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".estatica");
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".dinamica");
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        // TODO add your handling code here:
        abrirArchivoDos(".lexemas");
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel25MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseEntered
        // TODO add your handling code here:
        jLabel25.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel25MouseEntered
    private String[] abrirArchivo() {
        String aux = "";
        String texto = "";
        String ar[] = new String[2];

        jFileChooser1.setCurrentDirectory(new File("./"));
        int returnVal = jFileChooser1.showOpenDialog(this);
        ar[0] = "";
        if (returnVal == JFileChooser.APPROVE_OPTION) {

            File file = jFileChooser1.getSelectedFile();

            if (!(jFileChooser1.getName(file) == null)) {
                ar[0] = jFileChooser1.getName(file);
            } else {
                ar[0] = "";
            }
            ///
            if (file != null) {

                try {
                    boolean firstRead = true;
                    BufferedReader bf = new BufferedReader(new FileReader(file));
                    String sCadena;
                    /*while ((sCadena = bf.readLine()) != null) {
                
                  if (firstRead) {
                      //  jTextArea1.append(sCadena);
                      texto = sCadena;
                      firstRead = false;
                  } else {
                      //jTextArea1.append("\n" + sCadena);
                      texto = sCadena;
                      //checar
                  }
              }*/
                    while ((aux = bf.readLine()) != null) {
                        texto += aux + "\n";

                    }
                    bf.close();
                    //  leido = true;
                    fileName = jFileChooser1.getSelectedFile().getName();
                    fileAddress = jFileChooser1.getSelectedFile().getParent() + "/";

                } catch (FileNotFoundException ex) {
                    JOptionPane.showConfirmDialog(null, "Archivo no encontrado\nError " + ex);
                } catch (IOException ex) {
                    JOptionPane.showConfirmDialog(null, "Error " + ex);

                }
            }//if

        }

        /*
  try
  {
  /**llamamos el metodo que permite cargar JFileChooser
   JFileChooser file=new JFileChooser();
   file.setCurrentDirectory(new File("./"));
   
   file.showOpenDialog(this); // abrimos la ventana de JFilechooser
   /**abrimos el archivo seleccionado
   File abre=file.getSelectedFile();
   
   if(!(file.getName(abre) == null)){
   ar[0] = file.getName(abre);
   }
   else{
       ar[0]="";
   }
   
   /**recorremos el archivo, lo leemos para plasmarlo
   *en el area de texto
   if(abre!=null)
   {     
      FileReader archivos=new FileReader(abre);
      BufferedReader lee=new BufferedReader(archivos);
      while((aux=lee.readLine())!=null)
      {
         texto+= aux+ "\n";
       
      }
        lee.close();
        fileName = file.getSelectedFile().getName();
        fileAddress = file.getSelectedFile().getParent() + "/";
        System.out.println(fileName + "\n" + fileAddress);
    }    
   }
   catch(IOException ex)
   {
     JOptionPane.showMessageDialog(null,ex+"" +
           "\nNo se ha encontrado el archivo",
                 "ADVERTENCIA!!!",JOptionPane.WARNING_MESSAGE);
    }
         */
        ar[1] = texto;

        return ar;//El texto que almacenaremos en el JTextArea
    }

    private void abrirArchivoDos(String extension) {

        ShapeTabbedPane stp = pane;

        JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
        JViewport jvp = ((JViewport) jsp.getComponent(0));
        JTextPane jtp = ((JTextPane) jvp.getComponent(0));
        String nombre2 = jtp.getName();

        String nombre3 = nombre2.replace(".c", extension);
        /*String nom[] = nombre2.split(".");
            String nombre3=nom[nom.length-1];
           System.out.println("desde abrir archivo 2: "+nombre3);
         */

        File file = new File(nombre3);

        ///
        try {
            Desktop.getDesktop().open(file);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error " + ex);

        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Error \n" + "El archivo no existe aún, porfavor compile el programa.");
        }

    }

    void Guardar(String texto) {

        ShapeTabbedPane stp = pane;

        JScrollPane jsp = ((JScrollPane) (stp.getComponent((stp.getSelectedIndex() + 3))));
        JViewport jvp = ((JViewport) jsp.getComponent(0));
        JTextPane jtp = ((JTextPane) jvp.getComponent(0));
        fileName = jtp.getName();
        File file;
        file = new File(fileName);
        if (file.exists()) { //&& leido) {
            BufferedWriter outFile = null;
            try {
                outFile = new BufferedWriter(new FileWriter(file));
                String contenido = texto;//.getText();
                StringTokenizer st = new StringTokenizer(contenido, "\n");
                try {
                    while (st.hasMoreTokens()) {
                        outFile.write(st.nextToken());
                        outFile.newLine();
                    }
                    outFile.flush();
                    outFile.close();
                    // compilable = true;
                    //leido = true;
                } catch (IOException e) {
                    JOptionPane.showConfirmDialog(null, "Error " + e);
                } finally {
                    try {
                        outFile.close();
                    } catch (IOException e2) {
                        JOptionPane.showConfirmDialog(null, "Error " + e2);
                    }
                }
            } catch (IOException ex) {
                JOptionPane.showConfirmDialog(null, "Error " + ex);
            } finally {
                try {
                    outFile.close();
                } catch (IOException ex) {
                    JOptionPane.showConfirmDialog(null, "Error " + ex);
                }
            }
        } else {
            jFileChooser1.setCurrentDirectory(new File("./"));
            jFileChooser1.setSelectedFile(file);
            int returnVal = jFileChooser1.showSaveDialog(this);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                boolean escribir = true;
                boolean sobreEscribir = false;
                String extension = "";
                File file2 = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
                while (escribir && file2.exists() && !sobreEscribir) {
                    sobreEscribir = (JOptionPane.showConfirmDialog(this, "¿Desea reemplazar el archivo?", "Save As Confirm...", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
                    if (!sobreEscribir) {
                        if (jFileChooser1.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                            file = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
                            extension = ".c";
                        } else {
                            escribir = false;
                        }
                    }
                }

                if (escribir) {
                    System.out.println("Escribir entro");
                    BufferedWriter outFile = null;
                    try {
                        outFile = new BufferedWriter(new FileWriter(jFileChooser1.getSelectedFile().getAbsolutePath() + ".c"));
                        String contenido = texto;//.getText();
                        StringTokenizer st = new StringTokenizer(contenido, "\n");
                        try {
                            while (st.hasMoreTokens()) {
                                outFile.write(st.nextToken());
                                outFile.newLine();
                            }
                            outFile.flush();
                            outFile.close();

                            fileName = jFileChooser1.getSelectedFile().getName() + ".c";
                            fileAddress = jFileChooser1.getSelectedFile().getParent() + "/";
                            System.out.println("ruta en IDE: " + fileAddress);
                            //   compilable = true;
                            //  leido = true;
                        } catch (IOException e) {
                            JOptionPane.showConfirmDialog(null, "Error " + e);
                        } finally {
                            try {
                                outFile.close();
                            } catch (IOException e2) {
                                JOptionPane.showConfirmDialog(null, "Error " + e2);
                            }
                        }

                    } catch (IOException ex) {
                        JOptionPane.showConfirmDialog(null, "Error " + ex);
                    } finally {
                        try {
                            outFile.close();
                        } catch (IOException ex) {
                            JOptionPane.showConfirmDialog(null, "Error " + ex);
                        }
                    }
                }
            } else {
                //candelado por el usuario
            }
        }
    }

    String GuardarconTitulo(String titulo, String texto) {
        //     File file = new File(fileAddress + fileName);
        String nombre = "";
        File file;
        file = new File(titulo);
        /* if (file.exists()){ //&& leido) {
            BufferedWriter outFile = null;
            try {
                outFile = new BufferedWriter(new FileWriter(file));
                String contenido = texto;//.getText();
                StringTokenizer st = new StringTokenizer(contenido, "\n");
                try {
                    while (st.hasMoreTokens()) {
                        outFile.write(st.nextToken());
                        outFile.newLine();
                    }
                    outFile.flush();
                    outFile.close();
                   // compilable = true;
                    //leido = true;
                } catch (IOException e) {
                    JOptionPane.showConfirmDialog(null, "Error " + e);
                } finally {
                    try {
                        outFile.close();
                    } catch (IOException e2) {
                        JOptionPane.showConfirmDialog(null, "Error " + e2);
                    }
                }
            } catch (IOException ex) {
                JOptionPane.showConfirmDialog(null, "Error " + ex);
            } finally {
                try {
                    outFile.close();
                } catch (IOException ex) {
                    JOptionPane.showConfirmDialog(null, "Error " + ex);
                }
            }
        }
        else {*/
        jFileChooser1.setCurrentDirectory(new File("./"));
        jFileChooser1.setSelectedFile(file);
        // int returnVal = jFileChooser1.showSaveDialog(this);
        // if (returnVal == JFileChooser.APPROVE_OPTION) {
        boolean escribir = true;
        boolean sobreEscribir = false;
        String extension = "";
        File file2 = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
        while (escribir && file2.exists() && !sobreEscribir) {
            sobreEscribir = (JOptionPane.showConfirmDialog(this, "¿Desea reemplazar el archivo?", "Save As Confirm...", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION);
            if (!sobreEscribir) {
                if (jFileChooser1.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                    file = new File(jFileChooser1.getSelectedFile().getAbsolutePath());
                    extension = ".c";
                } else {
                    escribir = false;
                }
            }
        }

        if (escribir) {

            BufferedWriter outFile = null;
            try {
                outFile = new BufferedWriter(new FileWriter(jFileChooser1.getSelectedFile().getAbsolutePath() + ".c"));
                String contenido = texto;//.getText();
                StringTokenizer st = new StringTokenizer(contenido, "\n");
                try {
                    while (st.hasMoreTokens()) {
                        outFile.write(st.nextToken());
                        outFile.newLine();
                    }
                    outFile.flush();
                    outFile.close();

                    fileName = jFileChooser1.getSelectedFile().getName() + ".c";
                    fileAddress = jFileChooser1.getSelectedFile().getAbsolutePath();//+ "/";
                    nombre = fileAddress + ".c";//+fileName;

                    System.out.println("Nombre desde guardar con titulo" + nombre);
                    //fileAddress = jFileChooser1.getSelectedFile().getParent() + "/";

                    //   compilable = true;
                    //  leido = true;
                } catch (IOException e) {
                    JOptionPane.showConfirmDialog(null, "Error " + e);
                } finally {
                    try {
                        outFile.close();
                    } catch (IOException e2) {
                        JOptionPane.showConfirmDialog(null, "Error " + e2);
                    }
                }

            } catch (IOException ex) {
                JOptionPane.showConfirmDialog(null, "Error " + ex);
            } finally {
                try {
                    outFile.close();
                } catch (IOException ex) {
                    JOptionPane.showConfirmDialog(null, "Error " + ex);
                }
            }
        }

        // }
        return nombre;
    }

    public void agregaPestaña(String n) {
        //String nn = n+".c";
        JTextPane textpane = new JTextPane();
        textpane.setName(n);
        fileName = textpane.getName();
        JScrollPane scroll = new JScrollPane();
        StyleParser parser = new StyleParser(textpane, scroll, Color.BLACK, Color.decode("#00FF00"));
        //
        textopaneseleccionado = parser.stringTextPane(textpane);
        scroll.setPreferredSize(new Dimension(pane.getWidth(), pane.getHeight()));
        scroll.setBorder(BorderFactory.createEmptyBorder());
        Font font = new Font("Serif", Font.ITALIC, fuente);
        textpane.setFont(font);
        scroll.setLocation(0, 0);
        textpane.setSize(scroll.getWidth(), scroll.getHeight());
        textpane.setLocation(0, 0);

        textpane.requestFocus();

        textpane.addCaretListener(new CaretListener() {

            @Override
            public void caretUpdate(CaretEvent evt) {
                jLabel11.setText("[" + getRow(evt.getDot(), (JTextComponent) evt.getSource()) + ":" + getColumn(evt.getDot(), (JTextComponent) evt.getSource()) + "]");
            }
        });
        cont = pane.getTabCount();
        pane.addTab(n, scroll);
        PanelTab bt = new PanelTab(pane, 1, jPanel4, jLabel14, jLabel15, jLabel16, jLabel17, jLabel11, jTextField1,
                false, false, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25);
        pane.setTabComponentAt(cont, bt);

    }

    public static int getRow(int pos, JTextComponent editor) {
        int rn = (pos == 0) ? 1 : 0;
        try {
            int offs = pos;
            while (offs > 0) {
                offs = Utilities.getRowStart(editor, offs) - 1;
                rn++;
            }
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
        return rn;
    }

    public static int getColumn(int pos, JTextComponent editor) {
        try {
            return pos - Utilities.getRowStart(editor, pos) + 1;
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
        return -1;
    }

    public void agregaPestañaDesdeNuevo(String n, String texto) {

        JTextPane textpane = new JTextPane();
        textpane.setName(n);

        textpane.setText(texto);
        textpane.setForeground(Color.decode("#00FF00"));
        JScrollPane scroll = new JScrollPane();
        StyleParser parser = new StyleParser(textpane, scroll, Color.BLACK, Color.decode("#00FF00"));
        //
        parser.colorFunction(textpane);
        textopaneseleccionado = parser.stringTextPane(textpane);

        scroll.setPreferredSize(new Dimension(pane.getWidth(), pane.getHeight()));
        scroll.setBorder(BorderFactory.createEmptyBorder());
        Font font = new Font("Serif", Font.ITALIC, fuente);
        textpane.setFont(font);
        scroll.setFont(font);
        textpane.addCaretListener(new CaretListener() {

            @Override
            public void caretUpdate(CaretEvent evt) {
                jLabel11.setText("[" + getRow(evt.getDot(), (JTextComponent) evt.getSource()) + ":" + getColumn(evt.getDot(), (JTextComponent) evt.getSource()) + "]");
            }
        });
        scroll.setLocation(0, 0);
        textpane.setSize(scroll.getWidth(), scroll.getHeight());
        textpane.setLocation(0, 0);
        cont = pane.getTabCount();
        pane.addTab(n, scroll);
        PanelTab bt = new PanelTab(pane, 1, jPanel4, jLabel14, jLabel15, jLabel16, jLabel17, jLabel11, jTextField1,
                false, false, jLabel19, jLabel20, jLabel21, jLabel22, jLabel23, jLabel24, jLabel25);
        pane.setTabComponentAt(cont, bt);
        textpane.setFocusable(true);

    }

    public void buscarpalabra(JTextPane area1, String texto) {
        if (texto.length() >= 1) {
            DefaultHighlighter.DefaultHighlightPainter highlightPainter = new DefaultHighlighter.DefaultHighlightPainter(new Color(204, 204, 204, 50));
            Highlighter h = area1.getHighlighter();
            //h.removeAllHighlights();
            String text = area1.getText();
            String caracteres = texto;
            Pattern p = Pattern.compile("(?i)" + caracteres);
            Matcher m = p.matcher(text);
            while (m.find()) {
                try {
                    h.addHighlight(m.start(), m.end(), highlightPainter);
                } catch (BadLocationException ex) {
                    Logger.getLogger(Color.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {
            JOptionPane.showMessageDialog(area1, "la palabra a buscar no puede ser vacia");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IDE.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IDE().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel header;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    public static javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
